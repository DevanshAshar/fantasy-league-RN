swagger: "2.0"
info:
  title: Fantasy League
  version: 1.0
  servers:
    - url: "http://localhost:5000"
    - description: Local server
schemes: [http,https]
securityDefinitions:
  Bearer:
    type: apiKey
    name: AuthenticateUser
    in: header
    description: Enter your JWT Bearer token to authenticate your request.

paths:
  #newUser
  /user/newUser :
    post :
      summary: new user sign up
      produces : 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - in : body
          schema: 
            type: object
            properties :
              username :
                type: string
                default : "testUser"
              email :
                type: string
                default : "testuser@gmail.com"
              password :
                type: string
                default : "asdfghjkl"
              mobile :
                type : number
                default : 9187263504
      responses :
        200:
          description : Successfully Registered
          schema :
            type : object
            properties : 
              token :
                type : jwt
                default : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDEzZWQ4MTAwYzgzMDM5NmQ0MzhjZTIiLCJpYXQiOjE2NzkwNDY1NjIsImV4cCI6MTY3OTEzMjk2Mn0.EqnN-Yd0NGu9eBUDs4zjl52K0oRSAFrGON2WZYqFQnI"
              user :
                type : object
                properties :
                  _id : 
                    type : string
                    default : "6413ed8100c830396d438ce2"
                  username : 
                    type : string
                    default: "testUser"
                  email :
                    type : string
                    default : "testuser@gmail.com"
                  password :
                    type : string
                    default : "$2b$09$2E0zVqrt699Zrw8r7LzoROCQG3dEH8f97556ayWNktAksEpOWoNba"
                  mobile :
                    type : number
                    default : 9187263504
        400 :
          description : Error in registering user
  #logging in user
  /user/userLogin :
    post :
      summary : logging user
      produces : 
        - application/json
      consumes: 
        - application/json
      parameters :
        - in : body
          schema :
            type : object
            properties :
              email :
                type : string
                default : "testuser@gmail.com"
              password : 
                type : string
                default : "asdfghjkl"
      responses :
        200 : 
          description : Logged In Successfully
          schema :
            type : object
            properties : 
              token :
                type : jwt
                default : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDEzZWQ4MTAwYzgzMDM5NmQ0MzhjZTIiLCJpYXQiOjE2NzkwNDY1NjIsImV4cCI6MTY3OTEzMjk2Mn0.EqnN-Yd0NGu9eBUDs4zjl52K0oRSAFrGON2WZYqFQnI"
              userData :
                type : object
                properties :
                  _id : 
                    type : string
                    default : "6413ed8100c830396d438ce2"
                  username : 
                    type : string
                    default: "testUser"
                  email :
                    type : string
                    default : "testuser@gmail.com"
                  password :
                    type : string
                    default : "$2b$09$2E0zVqrt699Zrw8r7LzoROCQG3dEH8f97556ayWNktAksEpOWoNba"
                  mobile :
                    type : number
                    default : 9187263504
        400 : 
          description : Error in logging in
  #logout
  /user/logout :
    get :
      summary : logging out user
      security :
        - Bearer : []
      responses :
        200 :
          description : Logged Out 
          schema :
            type : object
            properties :
              message : 
                type : string
                default : "Logged Out"
        400 :
          description : Error in logging out
        401 :
          description : Unauthorized
  #logout all sessions
  /user/logoutAll :
    get :
      summary :  logging user out of all sessions
      security :
        - Bearer : []
      responses :
        200 :
          description : Logged out of all sessions
          schema : 
            type : object
            properties : 
              message : 
                type : string
                default : "Successfully logged out"
        400 :
          description : Error in logging out of all sessions
        401 :
          description : Unauthorized
  #forgot password
  /user/forgotPass :
    post :
      summary : Forgot Password
      parameters :
        - in : body
          schema :
            type : object
            properties :
              email :
                type : string
                default : "testuser@gmail.com"
      responses :
        200 :
          description : OTP sent on email
          schema :
            type : object
            properties :
              message :
                type : string
                default : "OTP sent on registered email"
        400 :
          description : Error in sending otp
  #verify otp
  /user/verifyOtp :
    post :
      summary : verifying otp
      parameters :
        - in : body
          schema :
            type : object
            properties :
              email :
                type : string
                default : "testuser@gmail.com"
              otp :
                type : number
                default : 1234
      responses :
        200 : 
          description : OTP verified
          schema :
            type : object
            properties :
              message :
                type: string
                default : "otp verified"
        400 :
          description : error in verifying otp
  #new password
  /user/newPass :
    post :
      summary : set new password after otp verification
      parameters : 
        - in : body
          schema :
            type : object
            properties : 
              email:
                type : string
                default: "testuser@gmail.com"
              password:
                type: string
                default: "newpassword"
      responses :
        200 :
          description : password updated
          schema :
            type : object
            properties : 
              message :
                type : string
                default : "password updated"
        400 :
          description : error in updating password
  #creation of contest
  /contest/create :
    post :
      summary : create a new contest
      security : 
        - Bearer : []
      parameters : 
        - in : body
          schema :
            type : object
            properties :
              spots :
                type : number
                default : 100
              typeOfContest:
                type : string
                default : public
              paidFree: 
                type: string
                default: free
              noOfTeams:
                type: number
                default: 100
              pricePerTeam:
                type: number
                default: 0
              winningPrice:
                type: number
                default: 0      
      responses :
        200 :
          description : Contest successfully created
          schema :
            type : object
            properties : 
              message :
                type : string
                default : "contest Created"
        400 : 
          description: Error in creating a new contest
  #get private contest
  /contest/private:
    get :
      summary : gives the data of private contest
      security : 
        - Bearer : []
      parameters : 
      description : only registered users    
      responses :
        200 :
          description: Succesful response 
              
        400 : 
          description: Error in getting private contest
  #get all contest
  /contest/all:
    get :
      summary : gives the data of private contest
      security : 
        - Bearer : []
      parameters : 
      description: only registered users   
      responses :
        200 :
          description : Successful response
          
              
        400 : 
          description: Error in getting all contest
  #delete contest
  /contest/delete:
    delete:
      summary: Deleting a contest
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          schema:
            type: object
            properties:
              _id:
                type: string
                default: '00000'
      responses:
        200:
          description: Success, the contest has been deleted
        400:
          description: Unable to delete the contest
  #update a contest
  /contest/change:
    put:
        summary: Updating the data in contest
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - in: body
            schema:
              type: object
              properties:
                _id: 
                type: string
                default: '00000'
        responses:
          200:
            description: Suucess, the data of contest has been updated
          400:
            description: Unable to update the data
  #add user to th contest
  /contest/add:
    put:
      summary: joining a user to the contest
      parameters:
        - in: body
          schema:
            type: object
            properties:
              _id:
                type: string
                default: '0000000'
        responses: 
          200:
            description: you have joined the contest successfully
          400:
            description: error occured whilr joining the contest
  #remove user
  /contest/remove:
    put:
      summary: remove the user from the contest
      parameters:
        - in: body
          schema:
            type: object
            properties:
              _id:
                type: string
                default: '00000000000'
      responses:
        200:
          description: removed the user successfully
        400:
          description: error ocurred while removing the user


    
        
     
